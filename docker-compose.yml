# version: '3.8'

# Общие настройки
networks:
  kb-network:
    driver: bridge

services:
  db:
    image: postgres:15-alpine
    env_file: ./backend/.env  
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: kb_admin
      POSTGRES_PASSWORD: 5tr0ngP@ss  
      POSTGRES_DB: knowledge_base
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kb-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kb_admin -d knowledge_base"]  # ✅ Проверяем именно `kb_admin`
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    env_file: 
      - ./backend/.env  # Специфичные для бэкенда переменные
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind backend:8000 --workers 3 backend.wsgi"
    volumes:
      - backend_static:/app/static
      - backend_media:/app/media
    networks:
      - kb-network
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: 
      context: ./frontend  # ✅ Контекст - это папка с фронтом
      dockerfile: Dockerfile  # ✅ Указываем правильный Dockerfile
      args:
        - VITE_API_URL=http://backend:8000  # Передаём переменные в Dockerfile
    # env_file:
    #   - ./frontend/.env  # Переменные для React
    ports:
      - "5173:80"
    networks:
      - kb-network
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
  backend_static:
  backend_media: